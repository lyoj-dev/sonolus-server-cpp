# This is a basic workflow to help you get started with Actions

name: android-build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:
  
env:
  VERSION: v1.2.0

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
            
      - name: Setup C/C++ Compiler
        run: |
          wget https://developer.arm.com/-/media/Files/downloads/gnu/12.2.rel1/binrel/arm-gnu-toolchain-12.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz
          tar -xvf arm-gnu-toolchain-12.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz
          export GCC=$(pwd)/arm-gnu-toolchain-12.2.rel1-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-g++
          $GCC --version
      
      - name: Cross-Compile libcrypto & libssl
        run: |
          export COMPILER=$(pwd)/arm-gnu-toolchain-12.2.rel1-x86_64-aarch64-none-linux-gnu/bin
          wget https://www.openssl.org/source/openssl-1.1.1t.tar.gz
          tar -xvf openssl-1.1.1t.tar.gz
          cd openssl-1.1.1t
          ./config --prefix="$(pwd)/output/" no-shared no-zlib no-asm -DOPENSSL_THREADS -pthread -D_REENTRANT -D_THREAD_SAFE -D_THREADSAFE
          export Makefile=$(cat Makefile)
          echo ${Makefile//-m64/} > Makefile 
          make CC="$COMPILER/aarch64-none-linux-gnu-gcc" AR="$COMPILER/aarch64-none-linux-gnu-ar rcs" RANLIB="$COMPILER/aarch64-none-linux-gnu-ranlib" -j8
          
#       - name: Test Github Release
#         uses: marvinpinto/action-automatic-releases@latest
#         with:
#           repo_token: "${{ secrets.GITHUB_TOKEN }}"
#           automatic_release_tag: ${{ env.VERSION }}
#           title: Sonolus Server ${{ env.VERSION }}
#           prerelease: false
#           files: |
#             windows-x64.zip
